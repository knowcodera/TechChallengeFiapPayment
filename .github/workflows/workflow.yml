name: Build, Analyze, and Deploy Payment API to Azure AKS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ACR_NAME: ${{ secrets.AZURE_ACR_NAME }}
  RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AKS_CLUSTER_NAME: ${{ secrets.AZURE_AKS_CLUSTER_NAME }}
  DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build-analyze-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Java 17 for SonarCloud
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Set up .NET Core
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      # Step 4: Prepare SonarCloud Analysis
      - name: SonarCloud Scan - Prepare
        uses: sonarsource/sonarcloud-github-action@v1
        with:
          projectKey: '<your-project-key>'
          organization: '<your-sonarcloud-organization>'
          token: ${{ secrets.SONAR_TOKEN }}
          extraProperties: |
            sonar.verbose=true
            sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml

      # Step 5: Clean and Build Payment API
      - name: Clean Payment API
        run: dotnet clean ./payment/src/PaymentApi/PaymentApi.csproj

      - name: Restore dependencies for Payment API
        run: dotnet restore ./payment/src/PaymentApi/PaymentApi.csproj

      - name: Build Payment API
        run: dotnet build ./payment/src/PaymentApi/PaymentApi.csproj --configuration Release --no-restore

      # Step 6: Run Unit Tests with Code Coverage
      - name: Run Unit Tests with Coverage
        run: |
          dotnet test ./payment/src/PaymentTests/ --logger "trx" --results-directory ./TestResults/ --collect:"Code Coverage"
          reportgenerator -reports:**/coverage.opencover.xml -targetdir:TestResults/ -reporttypes:Html

      # Step 7: Finalize SonarCloud Analysis
      - name: SonarCloud Scan - Complete
        uses: sonarsource/sonarcloud-github-action@v1
        with:
          projectKey: '<your-project-key>'
          organization: '<your-sonarcloud-organization>'
          token: ${{ secrets.SONAR_TOKEN }}

      # Step 8: Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 9: Login to Azure Container Registry (ACR) using Azure Credentials
      - name: Log in to Azure Container Registry (ACR)
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      # Step 10: Build and Push Docker image for Payment API
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/payment:latest ./payment
          docker push ${{ env.ACR_NAME }}.azurecr.io/payment:latest

      # Step 11: Deploy to AKS
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Get AKS Credentials
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
          resource-group: ${{ env.RESOURCE_GROUP }}

      - name: Deploy Payment API to AKS
        run: |
          kubectl apply -f ./k8s/deployment-payment.yaml
          kubectl apply -f ./k8s/service-payment.yaml
